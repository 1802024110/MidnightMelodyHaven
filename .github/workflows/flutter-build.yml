name: 构建发布Flutter应用

on:
  push:
    branches:
      - main

jobs:
  check-version:
    name: 检查版本
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check_version.outputs.version_changed }}
    steps:
      - name: 拉取代码
        uses: actions/checkout@v3

      - name: 获取上一个版本的pubspec.yaml
        id: get_previous_version
        run: |
          git fetch --depth=2
          git checkout HEAD^1 pubspec.yaml

      - name: 检查版本是否变化
        id: check_version
        run: |
          current_version=$(grep '^version:' pubspec.yaml | awk '{print $2}')
          previous_version=$(git show HEAD^1:pubspec.yaml | grep '^version:' | awk '{print $2}')
          echo "当前版本: $current_version"
          echo "之前版本: $previous_version"
          if [ "$current_version" != "$previous_version" ]; then
            echo "::set-output name=version_changed::true"
          else
            echo "::set-output name=version_changed::false"
          fi

  build-apk:
    name: 编译android
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    steps:
      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: 拉取代码
        uses: actions/checkout@v3

      - name: 安装依赖项
        run: flutter pub get

      - name: 设置java环境
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11.x'

      - name: 编译apk
        run: flutter build apk --split-per-abi --obfuscate --split-debug-info=build/app/outputs/symbols/release

      - name: 上传apk到工作流程
        uses: actions/upload-artifact@v2
        with:
          name: build-apk
          path: build/app/outputs/apk/release/*

  build-linux:
    name: 编译linux
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    steps:
      - name: 拉取代码
        uses: actions/checkout@v3

      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: 安装ninja、libgtk
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: 安装依赖项
        run: flutter pub get

      - name: 配置桌面
        run: flutter config --enable-linux-desktop

      - name: 编译linux
        run: flutter build linux

      - name: 压缩生成的文件
        run: tar -zcvf linux-64.tar.gz --directory=build/linux/x64/release/bundle .

      - name: 上传到工作流程
        uses: actions/upload-artifact@v2
        with:
          name: build-linux
          path: linux-64.tar.gz

  build-windows:
    name: 编译windows
    runs-on: windows-latest
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    steps:
      - name: 拉取代码
        uses: actions/checkout@v3

      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: 安装依赖项
        run: flutter pub get

      - name: 启动windows桌面
        run: flutter config --enable-windows-desktop

      - name: 编译windows
        run: flutter build windows

      - name: 压缩生成的文件
        run: Compress-Archive -Path "build\windows\x64\runner\Release" -DestinationPath "build\windows\windows-64.zip"

      - name: 上传到工作流程
        uses: actions/upload-artifact@v2
        with:
          name: build-windows
          path: build\windows\windows-64.zip

  build-web:
    name: 编译web
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    steps:
      - name: 设置Flutter环境
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: 拉取代码
        uses: actions/checkout@v3

      - name: 安装依赖项
        run: flutter pub get

      - name: 编译web
        run: flutter build web

      - name: 压缩生成的文件
        run: zip -9 -r web.zip build/web

      - name: 上传apk到工作流程
        uses: actions/upload-artifact@v2
        with:
          name: build-web
          path: web.zip

  release:
    name: 上传包
    needs: [build-apk, build-linux, build-windows, build-web]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d_%H-%M")"

      - name: 下载apk
        uses: actions/download-artifact@v2
        with:
          name: build-apk
          path: artifact

      - name: 下载linux
        uses: actions/download-artifact@v2
        with:
          name: build-linux
          path: artifact

      - name: 下载windows
        uses: actions/download-artifact@v2
        with:
          name: build-windows
          path: artifact

      - name: 下载web
        uses: actions/download-artifact@v2
        with:
          name: build-web
          path: artifact

      - name: 创建releases
        # 展示当前路径文件
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: ./artifact/*